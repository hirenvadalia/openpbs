cmake_minimum_required(VERSION 3.15)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/.cmake)

if(NOT DEFINED CMAKE_SUPPRESS_DEVELOPER_WARNINGS)
	set(CMAKE_SUPPRESS_DEVELOPER_WARNINGS 1 CACHE INTERNAL "No dev warnings")
endif()
set(PBS_VERSION 20.0.0 CACHE STRING "PBS version")
project(PBSPro VERSION ${PBS_VERSION})

# include(GNUInstallDirs)

set(PBS_SERVER_HOME /var/spool/pbs CACHE STRING "PBS home directory")
# FIXME: subst database_user
set(PBS_DATA_SERVICE_USER postgres CACHE STRING "PBS database user")
# FIXME: Do we need PBS_SERVER_FILE_NAME?
set(PBS_DATA_SERVICE_PORT 15007 CACHE STRING "PBS database port")
set(PBS_CONF_FILE /etc/pbs.conf CACHE STRING "PBS configuration file location")
set(TMP_DIR /var/tmp CACHE STRING "PBS temporary file location")
set(PBS_CORE_LIMIT unlimited CACHE STRING "PBS daemon coredump limit")
set(TCL_ATRSEP "." CACHE STRING "Tcl attribute separator")
set(SENDMAIL_CMD /usr/sbin/sendmail CACHE STRING "Full path to the sendmail executable")
set(XAUTH_BINARY xauth CACHE STRING "Name of the xauth executable")
set(MIN_STACK_LIMIT 0x1000000 CACHE STRING "Mininum stack limit")
option(DISABLE_SHELL_PIPE "Disable use of pipe in job script name" OFF)
if(NOT DISABLE_SHELL_PIPE)
	set(SHELL_INVOKE 1)
else()
	set(SHELL_INVOKE 0)
endif()

option(DISABLE_SYSLOG "Disable syslog support" OFF)
if(NOT DISABLE_SYSLOG)
	set(SYSLOG 1)
else()
	set(SYSLOG 0)
endif()

option(ENABLE_ALPS "Enable ALPS support" OFF)
option(ENABLE_PTL "Enable PTL" ON)

find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
find_package(PostgreSQL REQUIRED)
find_package(EXPAT REQUIRED)
find_package(SWIG REQUIRED)
find_package(TCL REQUIRED)
find_package(ZLIB REQUIRED)
find_package(Editline REQUIRED)
find_package(HwLoc REQUIRED)
find_package(Ical REQUIRED)
if(${Ical_VERSION_MAJOR} VERSION_GREATER 1)
	set(LIBICAL_API2 1)
endif()
find_package(UndoLR QUIET)
if(${UndoLR_FOUND})
	set(PBS_UNDOLR_ENABLED 1)
endif()

include(OsRelease)
if(${CMAKE_OS_ID} STREQUAL ubuntu OR ${CMAKE_OS_ID} STREQUAL debian)
	set(SYSTEMD_UNIT_DIR /lib/systemd/system)
else()
	set(SYSTEMD_UNIT_DIR /usr/lib/systemd/system)
endif()

add_subdirectory(src)
