#!/bin/bash

if [ "x$1" == "xwaitsvr" ]; then
    . /etc/pbs.conf
    _ct=0
    while true
    do
        /opt/pbs/bin/qstat -Bf &>/dev/null
        if [ $? -eq 0 ]; then
            break
        fi
        sleep 10
        _ct=$(( _ct + 1 ))
        if [ ${_ct} -gt 6 ]; then
            echo "Server ${PBS_SERVER} didn't come up in 60s, exiting"
            exit 1
        fi
    done
    sleep 10
    _moms=$3
    for _ms in ${_moms//-/ }
    do
        _host=${_ms//:*}
        _ss=${_ms#*:}
        for _s in ${_ss//+/ }
        do
            _si=${_s//@*}
            if [ "x${_si}" != "x${2}" ]; then
                continue
            fi
            __ms=${_s#*@}
            for _m in ${__ms//,/ }
            do
                _mi=${_m//=*}
                _ct=0
                while true
                do
                    /opt/pbs/bin/pbsnodes -v pbs-mom-${_si}-${_mi} 2>/dev/null | grep -q 'state = free' &>/dev/null
                    if [ $? -eq 0 ]; then
                        break
                    fi
                    sleep 10
                    _ct=$(( _ct + 1 ))
                    if [ ${_ct} -gt 6 ]; then
                        echo "Mom pbs-mom-${_si}-${_mi} didn't come up in 60s, exiting"
                        exit 1
                    fi
                done
            done
        done
    done
    exit 0
else
	exec > >(tee -a /tmp/my.log) 2> >(tee -a /tmp/my.log >&2)
	set -x
fi

/usr/sbin/sshd

# for server: <home path> server svrno (1 - start/0 - no start sched/comm) port dbport asyncdb moms cpus vnodes svrinsts?
_phome=/var/spool/pbs
if [ "x$1" != "xdefault" ]; then
    _phome=$1
fi

chown root: ${_phome}
chmod 0755 ${_phome}

if [ "x$2" == "xserver" -a $# -ge 6 ]; then
    {
        echo PBS_SERVER=pbs-server-$3
        echo PBS_EXEC=/opt/pbs
        echo PBS_HOME=${_phome}/pbs-server-$3
        echo PBS_START_SERVER=1
        echo PBS_START_MOM=0
        echo PBS_START_SCHED=$4
        echo PBS_START_COMM=$4
        echo PBS_SCP=$(which scp)
        echo PBS_SCHED_THREADS=1
        echo PBS_LOG_HIGHRES_TIMESTAMP=1
        echo PBS_CORE_LIMIT=unlimited
        echo PBS_BATCH_SERVICE_PORT=$5
        echo PBS_BATCH_SERVICE_PORT_DIS=$5
        echo PBS_DATA_SERVICE_PORT=$6
        echo PBS_LEAF_ROUTERS=pbs-server-1:17001
    } > /etc/pbs.conf
    unset _phome
# for mom: <home path> mom momport ownserver ownserverport name vnodes svrinsts?
elif [ "x$2" == "xmom" -a $# -ge 5 ]; then
    _port=$3
    {
        echo PBS_SERVER=$4
        echo PBS_EXEC=/opt/pbs
        echo PBS_HOME=${_phome}/$6
        echo PBS_START_SERVER=0
        echo PBS_START_MOM=1
        echo PBS_START_SCHED=0
        echo PBS_START_COMM=0
        echo PBS_SCP=$(which scp)
        echo PBS_LOG_HIGHRES_TIMESTAMP=1
        echo PBS_CORE_LIMIT=unlimited
        echo PBS_BATCH_SERVICE_PORT=$5
        echo PBS_BATCH_SERVICE_PORT_DIS=$5
        echo PBS_MOM_SERVICE_PORT=${_port}
        echo PBS_MANAGER_SERVICE_PORT=$(( _port + 1 ))
        echo PBS_LEAF_ROUTERS=pbs-server-1:17001
    } > /etc/pbs.conf
    unset _port _phome
else
    unset _phome
    exec /bin/bash
fi
/opt/pbs/libexec/pbs_init.d start
if [ "x$2" == "xserver" ]; then
    sleep 2
    /opt/pbs/bin/qmgr -c "s sched sched_host = pbs-server-1"
    /opt/pbs/bin/qmgr -c "s sched sched_port = 15004"
    /opt/pbs/bin/qmgr -c 's s acl_roots = root@*'
    /opt/pbs/bin/qmgr -c "s s flatuid = 1"
    if [ "x$7" == "x1" ]; then
        /opt/pbs/libexec/pbs_init.d stop
        sed -i 's/#synchronous_commit = on/synchronous_commit = off/g' /var/spool/pbs/pbs-server-${3}/datastore/postgresql.conf
        /opt/pbs/libexec/pbs_init.d start
        sleep 10
    fi
    _moms=$8
    _cpus=$9
    _vnodes=${10}
    if [ "x${_moms}" != "xnone" ]; then
        for _ms in ${_moms//-/ }
        do
            _host=${_ms//:*}
            _ss=${_ms#*:}
            for _s in ${_ss//+/ }
            do
                _si=${_s//@*}
                if [ "x${_si}" != "x${3}" ]; then
                    continue
                fi
                __ms=${_s#*@}
                for _m in ${__ms//,/ }
                do
                    _mi=${_m//=*}
                    _port=${_m#*=}
                    _port=$(( 18000 + _port ))
                    /opt/pbs/bin/qmgr -c "c n pbs-mom-${_si}-${_mi} MoM=${_host},Port=${_port}"
                    if [ "x${_vnodes}" == "x0" -a "x${_cpus}" != "x0" ]; then
                        /opt/pbs/bin/qmgr -c "s n pbs-mom-${_si}-${_mi} resources_available.ncpus = ${_cpus}"
                    fi
                done
            done
        done
    fi
    unset _mom _moms _cpus _name _host _mport _vnodes
else
    _mom=$6
    _cpu=$7
    _count=$8
    {
         echo '$configversion 2'
         echo "${_mom}: resources_available.ncpus=0"
         echo "${_mom}: resources_available.mem=0"
         for i in $(seq 1 1 ${_count})
         do
             echo "${_mom}[${i}]: resources_available.ncpus=${_cpu}"
             echo "${_mom}[${i}]: resources_available.host=${_mom}"
         done
     } > /tmp/vnodes
     /opt/pbs/sbin/pbs_mom -s remove vnodes
     /opt/pbs/sbin/pbs_mom -s insert vnodes /tmp/vnodes
     /opt/pbs/libexec/pbs_init.d restart
     unset _mom _cpu _count
fi
exec /bin/bash
